FROM python:3.9-bullseye AS build

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PYTHONFAULTHANDLER=1 \
    PATH=/usr/bin/poetry/bin:$PATH \
    POETRY_VIRTUALENVS_IN_PROJECT=true \
    POETRY_NO_INTERACTION=1 \
    PYTHON_KEYRING_BACKEND=keyring.backends.null.Keyring \
    POETRY_HOME=/usr/bin/poetry

RUN curl -sSL https://install.python-poetry.org > ./install-poetry.py && \
    python ./install-poetry.py && \
    rm ./install-poetry.py

# Create virtualenv for deployment
ENV VIRTUAL_ENV=/opt/venv
RUN python -m venv $VIRTUAL_ENV
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

COPY . .
COPY ./setup/methylationqc/pyproject.toml ./pyproject.toml
RUN poetry install --only main && \
    poetry lock --no-update && \
    poetry run pip install .

RUN apt-get update && \
    apt-get install -y build-essential \
        zlib1g-dev \
        libbz2-dev \
        liblzma-dev \
        libhts-dev \
        default-jre \
        wget \
        unzip \
        git \
        ; \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app
RUN git clone https://github.com/dpryan79/libBigWig.git && \
    cd libBigWig && \
    make && \
    make install

WORKDIR /app

RUN git clone https://github.com/dpryan79/MethylDackel.git && \
    cd MethylDackel && \
    make LIBBIGWIG="/app/libBigWig/libBigWig.a" && \
    mkdir -p /app/bin && \
    make install prefix=/app/bin/

WORKDIR /app/gatk
RUN wget -O gatk.zip  https://github.com/broadinstitute/gatk/releases/download/4.5.0.0/gatk-4.5.0.0.zip && \
    unzip  gatk.zip && \
    cd gatk-4.5.0.0


################################################

FROM python:3.9.18-slim

ARG BUILD_TIMESTAMP
ARG BUILD_VERSION
ARG VERSION

ARG HOST_INSTALL_DIR=/install

ENV VIRTUAL_ENV=/opt/venv
ENV PATH="$VIRTUAL_ENV/bin:$PATH"

LABEL com.ultimagenomics.build-timestamp=${BUILD_TIMESTAMP}
LABEL com.ultimagenomics.build-version=${BUILD_VERSION}
LABEL com.ultimagenomics.version=${VERSION}


RUN apt-get update && \
    apt-get install -y \
        default-jre \
        libhts-dev \
        ; \
    rm -rf /var/lib/apt/lists/*

WORKDIR /app/VariantCalling
COPY --from=build /opt/venv /opt/venv
COPY --from=build /app/bin /app/bin
COPY --from=build /app/gatk/gatk-4.5.0.0 /app/gatk
COPY . .
COPY ./setup/methylationqc/pyproject.toml ./pyproject.toml
COPY ./setup/methylationqc/data/meth_hg38-chr20_Lambda_pUC19.interval_list /app/interval_list/meth_hg38-chr20_Lambda_pUC19.interval_list

ENV PATH="/app/gatk:$PATH"
ENV PATH="/app/bin:$PATH"

# Set MPLCONFIGDIR to /app/.config/matplotlib
RUN mkdir -p /app/.config/matplotlib && \
    chmod 777 /app/.config/matplotlib

ENV MPLCONFIGDIR=/app/.config/matplotlib

# Set FONTCONFIG_PATH to /app/.cache/fontconfig
RUN mkdir -p /app/.cache/fontconfig && \
    chmod 777 /app/.cache/fontconfig

ENV FONTCONFIG_PATH=/app/.cache/fontconfig

WORKDIR /app/VariantCalling

# most of the time we would like to run python scripts (which will come in the command)
# ENTRYPOINT [ "/opt/venv/bin/python" ]
